--- 
$:
  preprocess:
    '$.terraform.vars.access_key': 'eval'
    '$.terraform.vars.secret_key': 'eval'
    '$.terraform.vars.region': 'eval'
    '$.cache.options.0': 'eval'
    '$.cache.options.1.region': 'eval'
    '$.cache.options.1.accessKeyId': 'eval'
    '$.cache.options.1.secretAccessKey': 'eval'
    '$.comment.providers.github.0.token': 'eval'
  cache:                                                        
    driver: 's3'
    options:
      - '"s3://travis-metadata/demo/terraform/" + process.env.TRAVIS_BRANCH'
      -
        region: 'process.env.AWS_DEFAULT_REGION'
        accessKeyId: 'process.env.AWS_ACCESS_KEY_ID'
        secretAccessKey: 'process.env.AWS_SECRET_ACCESS_KEY'
  emit: ~
  terraform:
    use-cache: true                                                         # Enable state/plans/backups caching if cache component enabled (default "true")
    apply: true                                                             # Terraform provision infrastructure (default "false")
    vars:                                                                   # Terraform variables (@see https://www.terraform.io/docs/configuration/variables.html)
      access_key: 'process.env.AWS_ACCESS_KEY_ID'
      secret_key: 'process.env.AWS_SECRET_ACCESS_KEY'
      region: 'process.env.AWS_DEFAULT_REGION'
  comment:
    providers:                                                              # Supported providers: github
      github:
        - token: 'process.env.GITHUB_TOKEN'
vpc:
  root: './vpc'
  terraform:
    run-after:
      - vpc-peer
vpc-peer:
  root: './vpc-peer'
